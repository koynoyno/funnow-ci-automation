name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  Playwright:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # shard the tests across 5 jobs
      matrix:
        shardIndex: [1, 2, 3, 4, 5]
        shardTotal: [5]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      run: npm ci
    - run: npx playwright install --with-deps
      if: steps.playwright-cache.outputs.cache-hit != 'true'
    # - name: Run Playwright tests
    #   run: npx playwright test
    # shard runs
    - name: Run Playwright tests
      run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      env:
        MYFUNNOW_USERNAME: ${{ secrets.MYFUNNOW_USERNAME }}
        MYFUNNOW_PASSWORD: ${{ secrets.MYFUNNOW_PASSWORD }}
    - name: Upload blob report to GitHub Actions Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: blob-report-${{ matrix.shardIndex }}
        path: blob-report
        retention-days: 1

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: always()
    needs: [Playwright]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Download blob reports from GitHub Actions Artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-blob-reports
        pattern: blob-report-*
        merge-multiple: true

    - name: Merge into HTML Report
      run: npx playwright merge-reports --reporter html ./all-blob-reports 

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      with:
        name: html-report--attempt-${{ github.run_attempt }}
        path: test-results
        retention-days: 14

    - name: Merge into JUnit Report
      run: npx playwright merge-reports ./all-blob-reports --reporter junit

    - name: Upload JUnit report
      uses: actions/upload-artifact@v4
      with:
        name: junit-report
        path: test-results
        retention-days: 14

    - name: Upload results to TestRail
      if: always()
      run: |
        pip install trcli
        trcli -y \
          -h ${{ secrets.TRCLI_INSTANCE }} \
          --project "FunNow CI" \
          -u ${{ secrets.TRCLI_USERNAME }} \
          -p ${{ secrets.TRCLI_PASSWORD }} \
          parse_junit \
          --title "Automated Tests from GitHub workflow" \
          --run-description ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \
          --file "./test-results/junit-report.xml"